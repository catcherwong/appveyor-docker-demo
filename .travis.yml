language: csharp
solution: Demo.sln
dist: xenial
sudo: required    
dotnet: 3.0.100
mono: none

services:
  - docker

os:
  - linux
  - osx
  
osx_image: xcode9.4

branches:
  only:
    - master
    - dev
 
script:
  # osx do not support docker 
  - if test "$TRAVIS_OS_NAME" == "linux"; then docker pull redis; fi
  - if test "$TRAVIS_OS_NAME" == "linux"; then docker pull memcached; fi
  - if test "$TRAVIS_OS_NAME" == "linux"; then docker run -p 6379:6379 --name redis6379 -d redis:latest redis-server; fi
  - if test "$TRAVIS_OS_NAME" == "linux"; then docker run -p 6380:6379 --name redis6380 -d redis:latest redis-server; fi  
  - if test "$TRAVIS_OS_NAME" == "linux"; then docker run -p 6388:6379 --name redis6388 -d redis:latest redis-server; fi  
  - if test "$TRAVIS_OS_NAME" == "linux"; then docker run -p 11211:11211 --name memcached1 -d memcached:latest memcached -m 256 -c 2048; fi  
  - if test "$TRAVIS_OS_NAME" == "linux"; then docker run -p 11212:11211 --name memcached2 -d memcached:latest memcached -m 256 -c 2048; fi  
  - if test "$TRAVIS_OS_NAME" == "linux"; then docker ps -a; fi
  - if test "$TRAVIS_OS_NAME" == "linux"; then dotnet restore; fi
  - if test "$TRAVIS_OS_NAME" == "osx"; then dotnet restore --disable-parallel; fi
  - dotnet build -c Release
  - if test "$TRAVIS_OS_NAME" == "linux"; then dotnet test -c Release ./Demo.csproj; fi
